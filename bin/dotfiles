#!/bin/sh

##############################################################################
##
##      Pewrie Bontal's Dotfiles
##      Painless Way to manage my dotfiles with basic git functions.
##      https://pewriebontal.ml
##
##############################################################################

RED='\033[0;31m'
GREEN='\033[0;32m'
ORANGE='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m'

source "$HOME/.config/dotfiles/config.cfg"

prompt() {
    case ${1} in
    "-s" | "--success")
        printf "${GREEN}%s${NC}\n" "${2}"
        ;;
    "-e" | "--error")
        printf "${RED}%s${NC}\n" "${2}"
        ;;
    "-w" | "--warning")
        printf "${ORANGE}%s${NC}\n" "${2}"
        ;;
    "-i" | "--info")
        printf "${BLUE}%s${NC}\n" "${2}"
        ;;
    *)
        printf "${GREEN}%s${NC}\n" "${2}"
        ;;
    esac
}

ShowUsage() {
    ShowVersion
    printf "%s" \
        "Usage: ${0##*/} [ options ]
    -h,     --help          -> show this help.
    -v,     --version       -> show version.
     r,     run           -> run git commands.
"
}

ShowVersion() {
    prompt -i " Pewrie Bontal's Dotfiles Project (C) Copyright 2021 "
}

Run(){
    $dotfilesc "${@:2}"
}

main() {
    var=$1
    index=$2
    case ${var} in
    -h | --help)
        ShowUsage
        ;;
    r  | --run)
    #    prompt -i "Running..."
        Run "${@}"
        ;;    
    -v | --version)
        ShowVersion
        ;;   
    *)
        prompt -w "Warning: --unknown command '${var}'"
        ;;
    esac
}

init() {
    if [ $# -eq 0 ]; then
        prompt -e "ERROR: This script needs at least one argument"
    else
        main "${@}"
    fi
}

init "${@}"
